buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        pitestGradlePluginVersion = '1.3.0'
        pitestJunit5PluginVersion = '0.8'
    }
    repositories {
        mavenCentral()
    }
    configurations.maybeCreate('pitest')
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("info.solidsoft.gradle.pitest:gradle-pitest-plugin:${pitestGradlePluginVersion}")
        pitest("org.pitest:pitest-junit5-plugin:${pitestJunit5PluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'info.solidsoft.pitest'

pitest {
    pitestVersion = '1.4.3'
    testPlugin = 'junit5'
    targetClasses = ['com.example.demo.*']
    outputFormats = ['XML', 'HTML']
}

version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.apache.commons:commons-lang3")
    implementation('org.liquibase:liquibase-core')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')

    runtimeOnly('com.h2database:h2')
    runtimeOnly('org.postgresql:postgresql')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        // Exclude JUnit 4
        exclude group: 'junit'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.platform:junit-platform-runner")
    testImplementation("org.mockito:mockito-junit-jupiter")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task checkCleanArchitecture(type: Exec) {
    commandLine 'tools/check-clean-architecture.sh'
}
check.dependsOn checkCleanArchitecture

task wrapper(type: Wrapper) {
    gradleVersion = '5.0'
}
